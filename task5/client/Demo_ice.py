# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `Demo.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo
_M_Demo = Ice.openModule('Demo')
__name__ = 'Demo'

_M_Demo._t_PopularStatefulObject = IcePy.defineValue('::Demo::PopularStatefulObject', Ice.Value, -1, (), False, True, None, ())

if 'PopularStatefulObjectPrx' not in _M_Demo.__dict__:
    _M_Demo.PopularStatefulObjectPrx = Ice.createTempClass()
    class PopularStatefulObjectPrx(Ice.ObjectPrx):

        def doubleAndPass(self, context=None):
            return _M_Demo.PopularStatefulObject._op_doubleAndPass.invoke(self, ((), context))

        def doubleAndPassAsync(self, context=None):
            return _M_Demo.PopularStatefulObject._op_doubleAndPass.invokeAsync(self, ((), context))

        def begin_doubleAndPass(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.PopularStatefulObject._op_doubleAndPass.begin(self, ((), _response, _ex, _sent, context))

        def end_doubleAndPass(self, _r):
            return _M_Demo.PopularStatefulObject._op_doubleAndPass.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.PopularStatefulObjectPrx.ice_checkedCast(proxy, '::Demo::PopularStatefulObject', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.PopularStatefulObjectPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::PopularStatefulObject'
    _M_Demo._t_PopularStatefulObjectPrx = IcePy.defineProxy('::Demo::PopularStatefulObject', PopularStatefulObjectPrx)

    _M_Demo.PopularStatefulObjectPrx = PopularStatefulObjectPrx
    del PopularStatefulObjectPrx

    _M_Demo.PopularStatefulObject = Ice.createTempClass()
    class PopularStatefulObject(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::PopularStatefulObject', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::PopularStatefulObject'

        @staticmethod
        def ice_staticId():
            return '::Demo::PopularStatefulObject'

        def doubleAndPass(self, current=None):
            raise NotImplementedError("servant method 'doubleAndPass' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_PopularStatefulObjectDisp)

        __repr__ = __str__

    _M_Demo._t_PopularStatefulObjectDisp = IcePy.defineClass('::Demo::PopularStatefulObject', PopularStatefulObject, (), None, ())
    PopularStatefulObject._ice_type = _M_Demo._t_PopularStatefulObjectDisp

    PopularStatefulObject._op_doubleAndPass = IcePy.Operation('doubleAndPass', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), ())

    _M_Demo.PopularStatefulObject = PopularStatefulObject
    del PopularStatefulObject

_M_Demo._t_UnpopularStatefulObject = IcePy.defineValue('::Demo::UnpopularStatefulObject', Ice.Value, -1, (), False, True, None, ())

if 'UnpopularStatefulObjectPrx' not in _M_Demo.__dict__:
    _M_Demo.UnpopularStatefulObjectPrx = Ice.createTempClass()
    class UnpopularStatefulObjectPrx(Ice.ObjectPrx):

        def saveToFile(self, data, context=None):
            return _M_Demo.UnpopularStatefulObject._op_saveToFile.invoke(self, ((data, ), context))

        def saveToFileAsync(self, data, context=None):
            return _M_Demo.UnpopularStatefulObject._op_saveToFile.invokeAsync(self, ((data, ), context))

        def begin_saveToFile(self, data, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.UnpopularStatefulObject._op_saveToFile.begin(self, ((data, ), _response, _ex, _sent, context))

        def end_saveToFile(self, _r):
            return _M_Demo.UnpopularStatefulObject._op_saveToFile.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.UnpopularStatefulObjectPrx.ice_checkedCast(proxy, '::Demo::UnpopularStatefulObject', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.UnpopularStatefulObjectPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::UnpopularStatefulObject'
    _M_Demo._t_UnpopularStatefulObjectPrx = IcePy.defineProxy('::Demo::UnpopularStatefulObject', UnpopularStatefulObjectPrx)

    _M_Demo.UnpopularStatefulObjectPrx = UnpopularStatefulObjectPrx
    del UnpopularStatefulObjectPrx

    _M_Demo.UnpopularStatefulObject = Ice.createTempClass()
    class UnpopularStatefulObject(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::UnpopularStatefulObject', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::UnpopularStatefulObject'

        @staticmethod
        def ice_staticId():
            return '::Demo::UnpopularStatefulObject'

        def saveToFile(self, data, current=None):
            raise NotImplementedError("servant method 'saveToFile' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_UnpopularStatefulObjectDisp)

        __repr__ = __str__

    _M_Demo._t_UnpopularStatefulObjectDisp = IcePy.defineClass('::Demo::UnpopularStatefulObject', UnpopularStatefulObject, (), None, ())
    UnpopularStatefulObject._ice_type = _M_Demo._t_UnpopularStatefulObjectDisp

    UnpopularStatefulObject._op_saveToFile = IcePy.Operation('saveToFile', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, ())

    _M_Demo.UnpopularStatefulObject = UnpopularStatefulObject
    del UnpopularStatefulObject

_M_Demo._t_PopularStatelessObject = IcePy.defineValue('::Demo::PopularStatelessObject', Ice.Value, -1, (), False, True, None, ())

if 'PopularStatelessObjectPrx' not in _M_Demo.__dict__:
    _M_Demo.PopularStatelessObjectPrx = Ice.createTempClass()
    class PopularStatelessObjectPrx(Ice.ObjectPrx):

        def multiplyIncorrectly(self, first, second, context=None):
            return _M_Demo.PopularStatelessObject._op_multiplyIncorrectly.invoke(self, ((first, second), context))

        def multiplyIncorrectlyAsync(self, first, second, context=None):
            return _M_Demo.PopularStatelessObject._op_multiplyIncorrectly.invokeAsync(self, ((first, second), context))

        def begin_multiplyIncorrectly(self, first, second, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.PopularStatelessObject._op_multiplyIncorrectly.begin(self, ((first, second), _response, _ex, _sent, context))

        def end_multiplyIncorrectly(self, _r):
            return _M_Demo.PopularStatelessObject._op_multiplyIncorrectly.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.PopularStatelessObjectPrx.ice_checkedCast(proxy, '::Demo::PopularStatelessObject', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.PopularStatelessObjectPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::PopularStatelessObject'
    _M_Demo._t_PopularStatelessObjectPrx = IcePy.defineProxy('::Demo::PopularStatelessObject', PopularStatelessObjectPrx)

    _M_Demo.PopularStatelessObjectPrx = PopularStatelessObjectPrx
    del PopularStatelessObjectPrx

    _M_Demo.PopularStatelessObject = Ice.createTempClass()
    class PopularStatelessObject(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::PopularStatelessObject', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::PopularStatelessObject'

        @staticmethod
        def ice_staticId():
            return '::Demo::PopularStatelessObject'

        def multiplyIncorrectly(self, first, second, current=None):
            raise NotImplementedError("servant method 'multiplyIncorrectly' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_PopularStatelessObjectDisp)

        __repr__ = __str__

    _M_Demo._t_PopularStatelessObjectDisp = IcePy.defineClass('::Demo::PopularStatelessObject', PopularStatelessObject, (), None, ())
    PopularStatelessObject._ice_type = _M_Demo._t_PopularStatelessObjectDisp

    PopularStatelessObject._op_multiplyIncorrectly = IcePy.Operation('multiplyIncorrectly', Ice.OperationMode.Idempotent, Ice.OperationMode.Idempotent, False, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_int, False, 0)), (), ((), IcePy._t_int, False, 0), ())

    _M_Demo.PopularStatelessObject = PopularStatelessObject
    del PopularStatelessObject

# End of module Demo
